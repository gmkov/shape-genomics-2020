#geom_text(aes(label=mother.id), nudge_x = .01)+
scale_color_manual(values = c("black", "orange"))+scale_fill_manual(values = c("black", "orange"))+
#scale_colour_viridis_d(end = .7)+scale_fill_viridis_d(end = .7)+
ylim(1.94,2.225)+xlim(1.94,2.225)+theme_bw()+
theme(panel.border = element_rect(colour = "black", fill=NA, size=.8),
panel.background = element_blank(), legend.text = element_text(size=12), legend.title =  element_text(size=12),
panel.grid.major = element_blank(), axis.text=element_text(size=12),
panel.grid.minor = element_blank(), axis.title=element_text(size=14,face="bold"),
legend.text.align = 0, legend.position = "right",strip.text = element_text(size=14,face="bold.italic"),
strip.background =element_rect(fill="transparent", color="transparent")
); fig.supp.2
ggarrange(fig.supp.2, ggarrange(supp.ar.centred.era, supp.ar.centred.mel, NULL, ncol = 3, labels = c("B", "",""), widths = c(1,1,.2)), # Second row with box and dot plots
nrow = 2, labels = "A",align = "hv" )
fig.supp.2 <-  ggplot(subset(summ.sex, n>2), aes(x=ar.mother, y=aspect.ratio.mean, colour=sex, group=sex, fill=sex))+
geom_abline(slope=1, intercept=, colour="grey",lty=2)+
stat_smooth(method="lm")+
stat_regline_equation(aes(),label.y.npc = 0.8,font.label = c("bold"), size=5)+
stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")), label.x = 1.95, size=5, p.accuracy = 0.001, r.accuracy = 0.01)+
geom_errorbar(width=0, aes(ymin=aspect.ratio.mean-aspect.ratio.se, ymax=aspect.ratio.mean+aspect.ratio.se), alpha=.7) +
geom_point(aes(size=n))+
#geom_point(size=3)+
ylab("Mid-offspring aspect ratio")+xlab("Mother aspect ratio")+ labs(size = "Brood size")+
facet_wrap(~species)+
#geom_text(aes(label=mother.id), nudge_x = .01)+
scale_color_manual(values = c("black", "orange"))+scale_fill_manual(values = c("black", "orange"))+
#scale_colour_viridis_d(end = .7)+scale_fill_viridis_d(end = .7)+
ylim(1.94,2.225)+xlim(1.94,2.225)+theme_bw()+
theme(panel.border = element_rect(colour = "black", fill=NA, size=.8),
panel.background = element_blank(), legend.text = element_text(size=12), legend.title =  element_text(size=12),
panel.grid.major = element_blank(), axis.text=element_text(size=12),
panel.grid.minor = element_blank(), axis.title=element_text(size=14,face="bold"),
legend.text.align = 0, legend.position = "right",strip.text = element_text(size=14,face="bold.italic"),
strip.background =element_rect(fill="transparent", color="transparent")
); fig.supp.2
##### 1.6 fig.S2 A split by sex ######
summ.sex <- dplyr::summarise(group_by(subset(df, area!=""& type.reared=="reared"&!(is.na(mother.id))&mother.id!=""), mother.id,species,rearing.batch,sex),
n=n(),
aspect.ratio.mean=mean(aspect.ratio, na.rm=TRUE),
aspect.ratio.sd=sd(aspect.ratio),
aspect.ratio.n=length(aspect.ratio),
aspect.ratio.se=sd(aspect.ratio)/sqrt(aspect.ratio.n),
area=mean(area),
altitude=mean(altitude),
dev.time=mean(dev.time,na.rm=T),
no.fem=length(subset(sex, sex=="female")),
no.male=length(subset(sex, sex=="male")),
ratio=no.male/no.fem)
fig.supp.2 <-  ggplot(subset(summ.sex, n>2), aes(x=ar.mother, y=aspect.ratio.mean, colour=sex, group=sex, fill=sex))+
geom_abline(slope=1, intercept=, colour="grey",lty=2)+
stat_smooth(method="lm")+
stat_regline_equation(aes(),label.y.npc = 0.8,font.label = c("bold"), size=5)+
stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")), label.x = 1.95, size=5, p.accuracy = 0.001, r.accuracy = 0.01)+
geom_errorbar(width=0, aes(ymin=aspect.ratio.mean-aspect.ratio.se, ymax=aspect.ratio.mean+aspect.ratio.se), alpha=.7) +
geom_point(aes(size=n))+
#geom_point(size=3)+
ylab("Mid-offspring aspect ratio")+xlab("Mother aspect ratio")+ labs(size = "Brood size")+
facet_wrap(~species)+
#geom_text(aes(label=mother.id), nudge_x = .01)+
scale_color_manual(values = c("black", "orange"))+scale_fill_manual(values = c("black", "orange"))+
#scale_colour_viridis_d(end = .7)+scale_fill_viridis_d(end = .7)+
ylim(1.94,2.225)+xlim(1.94,2.225)+theme_bw()+
theme(panel.border = element_rect(colour = "black", fill=NA, size=.8),
panel.background = element_blank(), legend.text = element_text(size=12), legend.title =  element_text(size=12),
panel.grid.major = element_blank(), axis.text=element_text(size=12),
panel.grid.minor = element_blank(), axis.title=element_text(size=14,face="bold"),
legend.text.align = 0, legend.position = "right",strip.text = element_text(size=14,face="bold.italic"),
strip.background =element_rect(fill="transparent", color="transparent")
); fig.supp.2
##### 1.6 fig.S2 A split by sex ######
summ.sex <- dplyr::summarise(group_by(subset(df, area!=""& type.reared=="reared"&!(is.na(mother.id))&mother.id!=""), mother.id,species,rearing.batch,sex),
n=n(),
aspect.ratio.mean=mean(aspect.ratio, na.rm=TRUE),
aspect.ratio.sd=sd(aspect.ratio),
aspect.ratio.n=length(aspect.ratio),
aspect.ratio.se=sd(aspect.ratio)/sqrt(aspect.ratio.n),
area=mean(area),
altitude=mean(altitude),
dev.time=mean(dev.time,na.rm=T),
no.fem=length(subset(sex, sex=="female")),
no.male=length(subset(sex, sex=="male")),
ratio=no.male/no.fem)
summ.sex$ar.mother <-  mothers$aspect.ratio[match(summ.sex$mother.id,mothers$mother.id)]
summ.sex$area.mother<-  mothers$area[match(summ.sex$mother.id,mothers$mother.id)]
summ.sex$altitude.type <-if_else(summ.sex$altitude>600,"high","low")
levels(summ.sex$species) <- c("H. erato", "H. melpomene")
fig.supp.2 <-  ggplot(subset(summ.sex, n>2), aes(x=ar.mother, y=aspect.ratio.mean, colour=sex, group=sex, fill=sex))+
geom_abline(slope=1, intercept=, colour="grey",lty=2)+
stat_smooth(method="lm")+
stat_regline_equation(aes(),label.y.npc = 0.8,font.label = c("bold"), size=5)+
stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")), label.x = 1.95, size=5, p.accuracy = 0.001, r.accuracy = 0.01)+
geom_errorbar(width=0, aes(ymin=aspect.ratio.mean-aspect.ratio.se, ymax=aspect.ratio.mean+aspect.ratio.se), alpha=.7) +
geom_point(aes(size=n))+
#geom_point(size=3)+
ylab("Mid-offspring aspect ratio")+xlab("Mother aspect ratio")+ labs(size = "Brood size")+
facet_wrap(~species)+
#geom_text(aes(label=mother.id), nudge_x = .01)+
scale_color_manual(values = c("black", "orange"))+scale_fill_manual(values = c("black", "orange"))+
#scale_colour_viridis_d(end = .7)+scale_fill_viridis_d(end = .7)+
ylim(1.94,2.225)+xlim(1.94,2.225)+theme_bw()+
theme(panel.border = element_rect(colour = "black", fill=NA, size=.8),
panel.background = element_blank(), legend.text = element_text(size=12), legend.title =  element_text(size=12),
panel.grid.major = element_blank(), axis.text=element_text(size=12),
panel.grid.minor = element_blank(), axis.title=element_text(size=14,face="bold"),
legend.text.align = 0, legend.position = "right",strip.text = element_text(size=14,face="bold.italic"),
strip.background =element_rect(fill="transparent", color="transparent")
); fig.supp.2
fig2.area.b <-  ggplot(subset(summ.sex, n>2), aes(x=area.mother, y=area, colour=sex, group=sex, fill=sex))+
geom_abline(slope=1, intercept=, colour="grey",lty=2)+
stat_smooth(data=subset(subset(summ.sex, n>2), species=="H. melpomene" ), method="lm")+
stat_regline_equation(aes(),label.y.npc = 0.7,font.label = c("bold"), size=5,label.x = 300)+
stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")), label.x = 300, size=5, p.accuracy = 0.001, r.accuracy = 0.01)+
#geom_errorbar(width=0, aes(ymin=area-area.se, ymax=area+area.se), alpha=.7) +
geom_point(aes(size=n))+
#geom_point(size=3)+
ylab("Mid-offspring wing area")+xlab("Mother wing area")+ labs(size = "Brood size")+
facet_wrap(~species, ncol = 1)+
#geom_text(aes(label=mother.id), nudge_x = .01)+
scale_color_manual(values = c("black", "orange"))+scale_fill_manual(values = c("black", "orange"))+
#scale_colour_viridis_d(end = .7)+scale_fill_viridis_d(end = .7)+
#ylim(1.94,2.225)+xlim(1.94,2.225)+theme_bw()+
theme(panel.border = element_rect(colour = "black", fill=NA, size=.8),
panel.background = element_blank(), legend.text = element_text(size=12), legend.title =  element_text(size=12),
panel.grid.major = element_blank(), axis.text=element_text(size=12),
panel.grid.minor = element_blank(), axis.title=element_text(size=14,face="bold"),
legend.text.align = 0, legend.position = "none",#strip.text = element_text(size=14,face="bold.italic"),
strip.text = element_blank(),
strip.background =element_rect(fill="transparent", color="transparent"),axis.title.y=element_blank()
); fig2.area.b
fig.shape.area.indiv <-  ggplot(subset(df, area!=""& (type.reared=="reared")&!(is.na(mother.id))&mother.id!=""&mother.id%in%subset(summ, n>2)$mother.id), aes(x=aspect.ratio, y=area))+
#geom_abline(slope=1, intercept=, colour="grey",lty=2)+
stat_smooth(data=subset(subset(df, area!=""& (type.reared=="reared")&!(is.na(mother.id))&mother.id!=""&mother.id%in%subset(summ, n>2)$mother.id), species=="melpomene" ), method="lm", lty="dashed", colour="black")+
stat_regline_equation(aes(),font.label = c("bold"), size=5, label.y.npc = 0.9, )+
stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")), size=5, p.accuracy = 0.001, r.accuracy = 0.01)+
#geom_errorbar(width=0, aes(ymin=area-area.se, ymax=area+area.se), alpha=.7) +
#geom_point(aes(size=n))+
geom_point(size=1, alpha=.7)+
ylab("Offsrping wing area")+xlab("Offspring aspect ratio")+ labs(size = "Brood size")+
facet_wrap(~species, ncol = 2)+
#geom_text(aes(label=mother.id), nudge_x = .01)+
#scale_color_manual(values = c("black", "orange"))+scale_fill_manual(values = c("black", "orange"))+
#scale_colour_viridis_d(end = .7)+scale_fill_viridis_d(end = .7)+
#ylim(1.94,2.225)+xlim(1.94,2.225)+theme_bw()+
theme(panel.border = element_rect(colour = "black", fill=NA, size=.8),
panel.background = element_blank(), legend.text = element_text(size=12), legend.title =  element_text(size=12),
panel.grid.major = element_blank(), axis.text=element_text(size=12),
panel.grid.minor = element_blank(), axis.title=element_text(size=14,face="bold"),
legend.text.align = 0, legend.position = "none",strip.text = element_text(size=14,face="bold.italic"),
#strip.text = element_blank(),
strip.background =element_rect(fill="transparent", color="transparent"),
); fig.shape.area.indiv
### 1.8 AR wild/reared high/low (supp) ####
# use same altitude range as mothers
hist(df$altitude, breaks = 20)
hist(summ$altitude, breaks = 20) # very few mothers between 650 and 1000- so remove from the wild sample
# prep dataset
df.wild <- subset(df, altitude>374&altitude<1601&(altitude>1000|altitude<650)&
sex!=""&type.reared=="wild"&is.na(mother.id))
df.wild.cg <-data_frame(indiv.brood=df.wild$cam.id,altitude=df.wild$altitude,altitude.type=df.wild$altitude.type, aspect.ratio=df.wild$aspect.ratio, sex=df.wild$sex, type.reared=df.wild$type.reared, species=df.wild$species); head(df.wild.cg)
df.cg <-data_frame(indiv.brood=subset(summ.sex, n>2)$mother.id,altitude=subset(summ.sex, n>2)$altitude,altitude.type=subset(summ.sex, n>2)$altitude.type, aspect.ratio=subset(summ.sex, n>2)$aspect.ratio.mean,
sex=subset(summ.sex, n>2)$sex, type.reared=rep("reared", nrow(subset(summ.sex, n>2))), species=subset(summ.sex, n>2)$species); head(df.cg)
df.wild.cg <-rbind(df.wild.cg, df.cg)
df.wild.cg$altitude.type <- substr(df.wild.cg$altitude.type, 0,3)
# prep t.tests
library(rstatix)
stat.test <-  df.wild.cg %>% group_by(altitude.type, species,sex) %>% t_test(aspect.ratio~type.reared) %>% add_significance()
stat.test <-  stat.test %>% add_xy_position(x="altitude.type")
# prep dataset
df.wild <- subset(df, altitude>374&altitude<1601&(altitude>1000|altitude<650)&
sex!=""&type.reared=="wild"&is.na(mother.id))
### 1.8 AR wild/reared high/low (supp) ####
# use same altitude range as mothers
hist(df$altitude, breaks = 20)
### 1.8 AR wild/reared high/low (supp) ####
# use same altitude range as mothers
hist(df$altitude, breaks = 20)
hist(summ$altitude, breaks = 20) # very few mothers between 650 and 1000- so remove from the wild sample
min(mothers$altitude)
min(mothers$altitude); max(mothers$altitude)
# prep dataset
df.wild <- subset(df, altitude>374&altitude<1522&(altitude>1000|altitude<650)&
sex!=""&type.reared=="wild"&is.na(mother.id))
### 1.8 AR wild/reared high/low (supp) ####
# use same altitude range as mothers
hist(df$altitude, breaks = 20)
hist(summ$altitude, breaks = 20) # very few mothers between 650 and 1000- so remove those from the wild sample
# prep dataset
df.wild <- subset(df, altitude>374&altitude<1522&(altitude>1000|altitude<650)&
sex!=""&type.reared=="wild"&is.na(mother.id))
df.wild.cg <-data_frame(indiv.brood=df.wild$cam.id,altitude=df.wild$altitude,altitude.type=df.wild$altitude.type, aspect.ratio=df.wild$aspect.ratio, sex=df.wild$sex, type.reared=df.wild$type.reared, species=df.wild$species); head(df.wild.cg)
df.cg <-data_frame(indiv.brood=subset(summ.sex, n>2)$mother.id,altitude=subset(summ.sex, n>2)$altitude,altitude.type=subset(summ.sex, n>2)$altitude.type, aspect.ratio=subset(summ.sex, n>2)$aspect.ratio.mean,
sex=subset(summ.sex, n>2)$sex, type.reared=rep("reared", nrow(subset(summ.sex, n>2))), species=subset(summ.sex, n>2)$species); head(df.cg)
df.wild.cg <-rbind(df.wild.cg, df.cg)
df.wild.cg$altitude.type <- substr(df.wild.cg$altitude.type, 0,3)
# prep t.tests
library(rstatix)
stat.test <-  df.wild.cg %>% group_by(altitude.type, species,sex) %>% t_test(aspect.ratio~type.reared) %>% add_significance()
stat.test <-  df.wild.cg %>% dplyr::group_by(altitude.type, species,sex) %>% t_test(aspect.ratio~type.reared) %>% add_significance()
# prep t.tests
library(rstatix)
stat.test <-  df.wild.cg %>% dplyr::group_by(altitude.type, species,sex) %>% t_test(aspect.ratio~type.reared) %>% add_significance()
stat.test <-  stat.test %>% add_xy_position(x="altitude.type")
df.wild.cg %>% dplyr::group_by(altitude.type, species,sex)
df.wild.cg <-data_frame(indiv.brood=df.wild$cam.id,altitude=df.wild$altitude,altitude.type=df.wild$altitude.type, aspect.ratio=df.wild$aspect.ratio, sex=df.wild$sex, type.reared=df.wild$type.reared, species=df.wild$species); head(df.wild.cg)
df.wild.cg <-rbind(df.wild.cg, df.cg)
df.wild.cg$altitude.type <- substr(df.wild.cg$altitude.type, 0,3)
df.wild.cg$altitude.type
stat.test <-  df.wild.cg %>% dplyr::group_by(altitude.type, species,sex) %>% t_test(aspect.ratio~type.reared) %>% add_significance()
library(dplyr)
stat.test <-  df.wild.cg %>% dplyr::group_by(altitude.type, species,sex) %>% t_test(aspect.ratio~type.reared) %>% add_significance()
df.wild.cg %>% dplyr::group_by(altitude.type, species,sex)
test <- df.wild.cg %>% dplyr::group_by(altitude.type, species,sex)
View(test)
unique(test$altitude.type)
unique(test$species)
df
levels(summ$species) <- c("erato", "melpomene")
df.cg <-data_frame(indiv.brood=subset(summ.sex, n>2)$mother.id,altitude=subset(summ.sex, n>2)$altitude,altitude.type=subset(summ.sex, n>2)$altitude.type, aspect.ratio=subset(summ.sex, n>2)$aspect.ratio.mean,
sex=subset(summ.sex, n>2)$sex, type.reared=rep("reared", nrow(subset(summ.sex, n>2))), species=subset(summ.sex, n>2)$species); head(df.cg)
levels(summ.sex$species) <- c("erato", "melpomene")
df.cg <-data_frame(indiv.brood=subset(summ.sex, n>2)$mother.id,altitude=subset(summ.sex, n>2)$altitude,altitude.type=subset(summ.sex, n>2)$altitude.type, aspect.ratio=subset(summ.sex, n>2)$aspect.ratio.mean,
sex=subset(summ.sex, n>2)$sex, type.reared=rep("reared", nrow(subset(summ.sex, n>2))), species=subset(summ.sex, n>2)$species); head(df.cg)
df.wild.cg <-rbind(df.wild.cg, df.cg)
df.wild.cg$altitude.type <- substr(df.wild.cg$altitude.type, 0,3)
stat.test <-  df.wild.cg %>% dplyr::group_by(altitude.type, species,sex) %>% t_test(aspect.ratio~type.reared) %>% add_significance()
unique(test$species)
df.cg <-data_frame(indiv.brood=subset(summ.sex, n>2)$mother.id,altitude=subset(summ.sex, n>2)$altitude,altitude.type=subset(summ.sex, n>2)$altitude.type, aspect.ratio=subset(summ.sex, n>2)$aspect.ratio.mean,
sex=subset(summ.sex, n>2)$sex, type.reared=rep("reared", nrow(subset(summ.sex, n>2))), species=subset(summ.sex, n>2)$species); head(df.cg)
df.wild.cg <-rbind(df.wild.cg, df.cg)
df.wild.cg$altitude.type <- substr(df.wild.cg$altitude.type, 0,3)
test <- df.wild.cg %>% dplyr::group_by(altitude.type, species,sex)
unique(test$species)
levels(summ.sex$species) <- c("H. erato", "H. melpomene")
df.cg <-data_frame(indiv.brood=subset(summ.sex, n>2)$mother.id,altitude=subset(summ.sex, n>2)$altitude,altitude.type=subset(summ.sex, n>2)$altitude.type, aspect.ratio=subset(summ.sex, n>2)$aspect.ratio.mean,
sex=subset(summ.sex, n>2)$sex, type.reared=rep("reared", nrow(subset(summ.sex, n>2))), species=subset(summ.sex, n>2)$species); head(df.cg)
df.wild.cg <-rbind(df.wild.cg, df.cg)
df.wild.cg$altitude.type <- substr(df.wild.cg$altitude.type, 0,3)
# prep t.tests
library(rstatix)
library(dplyr)
stat.test <-  df.wild.cg %>% dplyr::group_by(altitude.type, species,sex) %>% t_test(aspect.ratio~type.reared) %>% add_significance()
unique(test$species)
unique(summ.sex$species)
unique(df$species)
levels(df$species) <- c("H. erato", "H. melpomene")
df.cg <-data_frame(indiv.brood=subset(summ.sex, n>2)$mother.id,altitude=subset(summ.sex, n>2)$altitude,altitude.type=subset(summ.sex, n>2)$altitude.type, aspect.ratio=subset(summ.sex, n>2)$aspect.ratio.mean,
sex=subset(summ.sex, n>2)$sex, type.reared=rep("reared", nrow(subset(summ.sex, n>2))), species=subset(summ.sex, n>2)$species); head(df.cg)
df.wild.cg <-rbind(df.wild.cg, df.cg)
df.wild.cg$altitude.type <- substr(df.wild.cg$altitude.type, 0,3)
# prep t.tests
library(rstatix)
library(dplyr)
stat.test <-  df.wild.cg %>% dplyr::group_by(altitude.type, species,sex) %>% t_test(aspect.ratio~type.reared) %>% add_significance()
unique(df$species)
unique(df$sex)
df <- subset(df, sex!="")
df.wild.cg <-data_frame(indiv.brood=df.wild$cam.id,altitude=df.wild$altitude,altitude.type=df.wild$altitude.type, aspect.ratio=df.wild$aspect.ratio, sex=df.wild$sex, type.reared=df.wild$type.reared, species=df.wild$species); head(df.wild.cg)
levels(df$species) <- c("H. erato", "H. melpomene")
df.cg <-data_frame(indiv.brood=subset(summ.sex, n>2)$mother.id,altitude=subset(summ.sex, n>2)$altitude,altitude.type=subset(summ.sex, n>2)$altitude.type, aspect.ratio=subset(summ.sex, n>2)$aspect.ratio.mean,
sex=subset(summ.sex, n>2)$sex, type.reared=rep("reared", nrow(subset(summ.sex, n>2))), species=subset(summ.sex, n>2)$species); head(df.cg)
df.wild.cg <-rbind(df.wild.cg, df.cg)
df.wild.cg$altitude.type <- substr(df.wild.cg$altitude.type, 0,3)
# prep t.tests
library(rstatix)
library(dplyr)
stat.test <-  df.wild.cg %>% dplyr::group_by(altitude.type, species,sex) %>% t_test(aspect.ratio~type.reared) %>% add_significance()
unique(df$sex)
unique(df$species)
# prep dataset, use min/max altitude mothers collected
df.wild <- subset(df, altitude>374&altitude<1522&(altitude>1000|altitude<650)&
sex!=""&type.reared=="wild"&is.na(mother.id))
df.wild.cg <-data_frame(indiv.brood=df.wild$cam.id,altitude=df.wild$altitude,altitude.type=df.wild$altitude.type, aspect.ratio=df.wild$aspect.ratio, sex=df.wild$sex, type.reared=df.wild$type.reared, species=df.wild$species); head(df.wild.cg)
levels(df$species) <- c("H. erato", "H. melpomene")
df.cg <-data_frame(indiv.brood=subset(summ.sex, n>2)$mother.id,altitude=subset(summ.sex, n>2)$altitude,altitude.type=subset(summ.sex, n>2)$altitude.type, aspect.ratio=subset(summ.sex, n>2)$aspect.ratio.mean,
sex=subset(summ.sex, n>2)$sex, type.reared=rep("reared", nrow(subset(summ.sex, n>2))), species=subset(summ.sex, n>2)$species); head(df.cg)
df.wild.cg <-rbind(df.wild.cg, df.cg)
df.wild.cg$altitude.type <- substr(df.wild.cg$altitude.type, 0,3)
# prep t.tests
library(rstatix)
library(dplyr)
stat.test <-  df.wild.cg %>% dplyr::group_by(altitude.type, species,sex) %>% t_test(aspect.ratio~type.reared) %>% add_significance()
stat.test <-  stat.test %>% add_xy_position(x="altitude.type")
test <- df.wild.cg %>% dplyr::group_by(altitude.type, species,sex)
# plot
reared.wild.sex.sp.boxplot <- ggplot(aes(x=altitude.type, y=aspect.ratio, colour=type.reared), data = subset(df.wild.cg, aspect.ratio!=""))+
geom_boxplot(alpha=.7,  aes(fill=type.reared))+
geom_point(aes(group=type.reared, fill=type.reared), position = position_dodge(width = 0.75))+
stat_pvalue_manual(stat.test,label="{p.signif}")+
ylab("Aspect ratio")+ xlab("Altitude")+labs(colour="",fill="")+
facet_wrap(~species+sex)+
scale_x_discrete(labels=c("Highland", "Lowland"))+
scale_color_manual(values = c("black", "grey"))+scale_fill_manual(values = c("black", "grey"))+
theme_bw()+ theme(panel.border = element_rect(colour = "black", fill=NA, size=.8),
panel.background = element_blank(), legend.text = element_text(size=12), legend.title =  element_text(size=12),
panel.grid.major = element_blank(), axis.text=element_text(size=12),
panel.grid.minor = element_blank(), axis.title=element_text(size=12,face="bold",vjust = 1),
legend.text.align = 0, legend.position = "right",strip.text = element_text(size=12,face="bold", hjust = 0, vjust = -.5),
strip.background =element_rect(fill="transparent", color="transparent"));reared.wild.sex.sp.boxplot
### 1.9 AR wild/reared altitude (supp) ####
ggplot(aes(x=altitude, y=aspect.ratio, colour=type.reared), data = subset(df.wild.cg, aspect.ratio!=""))+
geom_point(alpha=.7,  aes(fill=type.reared))+
geom_point(aes(group=type.reared, fill=type.reared), position = position_dodge(width = 0.75))+
geom_smooth(method="lm")+stat_cor()+
ylab("Aspect ratio")+ xlab("Altitude")+labs(colour="",fill="")+
facet_wrap(~species+sex)+ scale_color_manual(values = c("black", "grey"))+scale_fill_manual(values = c("black", "grey"))+
theme_bw()+ theme(panel.border = element_rect(colour = "black", fill=NA, size=.8),
panel.background = element_blank(), legend.text = element_text(size=12), legend.title =  element_text(size=12),
panel.grid.major = element_blank(), axis.text=element_text(size=12),
panel.grid.minor = element_blank(), axis.title=element_text(size=12,face="bold",vjust = 1),
legend.text.align = 0, legend.position = "right",strip.text = element_text(size=12,face="bold", hjust = 0, vjust = -.5),
strip.background =element_rect(fill="transparent", color="transparent"))
##### plot together #####
plot_grid(fig2.a,fig2.b, ncol = 2, rel_widths = c(1,0.7), align = "h")
plot_grid(dev.p,area.p,ar.p,pupa.mass.p , ncol = 2)
### mean per brood lifehistory
dev.p <- ggscatter(subset(summ, n>2),x="altitude", y = "dev.time",rug = F,add = "reg.line",conf.int = T,
color = "rearing.batch", fill="rearing.batch", facet.by = c("species"))+stat_cor(aes(color = rearing.batch))  ; dev.p
ar.p <- ggscatter(subset(summ, n>2),x="altitude", y = "aspect.ratio.mean",rug = F,add = "reg.line",conf.int = T,
color = "rearing.batch", fill="rearing.batch", facet.by = c("species"), scales="free_y")+stat_cor(aes(color = rearing.batch))  ; ar.p
area.p <- ggscatter(subset(summ, n>2),x="altitude", y = "area",rug = F,add = "reg.line",conf.int = T,
color = "rearing.batch", fill="rearing.batch", facet.by = c("species"), scales="free_y")+stat_cor(aes(color = rearing.batch)); area.p
pupa.mass.p <- ggscatter(subset(summ, n>2),x="altitude", y = "pupa.clean.mass",rug = F,add = "reg.line",conf.int = T,
color = "rearing.batch", fill="rearing.batch", facet.by = c("species"), scales="free_y")+stat_cor(aes(color = rearing.batch))  ; pupa.mass.p
ggscatter(subset(df, !(sex==""&area!="")&altitude>200),x="altitude", y = "aspect.ratio",rug = F,add = "reg.line",conf.int = T,
color = "sex", fill="sex", palette = c("#00AFBB", "#E7B800"), facet.by = c("species","type.reared"), scales="fixed")+stat_cor(aes(color = sex))
############################## 2. analyses common garden broods #######
############### 2.2.1 erato #####
## checks, prep ##
# colinearity
library(olsrr)
m1.lm <- lm(aspect.ratio ~ altitude.type +area.scaled+sex+dev.time.scaled ,
data=subset(era.df.more3, species=="erato") ) ; summary(m1.lm)
## scale explanatory variables, only
era.df.more3 <- subset(subset(df, aspect.ratio!=""& mother.id!=""&species=="erato"&type.reared=="reared"), mother.id %in% summ[summ$n>2,]$mother.id)
#era.df.more3 <- subset(subset(df, aspect.ratio!=""& mother.id!=""&species=="erato"&type.reared=="reared"&dev.time!=""), mother.id %in% summ[summ$n>3,]$mother.id)
nrow(era.df.more3); length(unique(era.df.more3$mother.id))
hist(era.df.more3$altitude)
era.df.more3$altitude.scaled <- scale(era.df.more3$altitude ); hist(era.df.more3$altitude.scaled)
era.df.more3$aspect.ratio.scaled <- scale(era.df.more3$aspect.ratio ); hist(era.df.more3$aspect.ratio.scaled)
era.df.more3$area.scaled <- scale(era.df.more3$area ); hist(era.df.more3$area.scaled)
era.df.more3$dev.time.scaled <- scale(era.df.more3$dev.time ); hist(era.df.more3$dev.time)
############################## 2. analyses common garden broods #######
############### 2.2.1 erato #####
## checks, prep ##
## scale explanatory variables, only
era.df.more3 <- subset(subset(df, aspect.ratio!=""& mother.id!=""&species=="erato"&type.reared=="reared"), mother.id %in% summ[summ$n>2,]$mother.id)
nrow(era.df.more3); length(unique(era.df.more3$mother.id))
############################## 2. analyses common garden broods #######
############### 2.2.1 erato #####
## checks, prep ##
## scale explanatory variables, only
era.df.more3 <- subset(subset(df, aspect.ratio!=""& mother.id!=""&species=="H. erato"&type.reared=="reared"), mother.id %in% summ[summ$n>2,]$mother.id)
nrow(era.df.more3); length(unique(era.df.more3$mother.id))
hist(era.df.more3$altitude)
era.df.more3$altitude.scaled <- scale(era.df.more3$altitude ); hist(era.df.more3$altitude.scaled)
era.df.more3$aspect.ratio.scaled <- scale(era.df.more3$aspect.ratio ); hist(era.df.more3$aspect.ratio.scaled)
era.df.more3$area.scaled <- scale(era.df.more3$area ); hist(era.df.more3$area.scaled)
era.df.more3$dev.time.scaled <- scale(era.df.more3$dev.time ); hist(era.df.more3$dev.time)
# colinearity
library(olsrr)
m1.lm <- lm(aspect.ratio ~ altitude.type +area.scaled+sex+dev.time.scaled ,
data=subset(era.df.more3, species=="erato") ) ; summary(m1.lm)
############################## 2. analyses common garden broods #######
############### 2.2.1 erato #####
## checks, prep ##
levels(df$species) <- c("erato", "melpomene")
## scale explanatory variables, only
era.df.more3 <- subset(subset(df, aspect.ratio!=""& mother.id!=""&species=="H. erato"&type.reared=="reared"), mother.id %in% summ[summ$n>2,]$mother.id)
nrow(era.df.more3); length(unique(era.df.more3$mother.id))
hist(era.df.more3$altitude)
era.df.more3$altitude.scaled <- scale(era.df.more3$altitude ); hist(era.df.more3$altitude.scaled)
## scale explanatory variables, only
era.df.more3 <- subset(subset(df, aspect.ratio!=""& mother.id!=""&species=="erato"&type.reared=="reared"), mother.id %in% summ[summ$n>2,]$mother.id)
nrow(era.df.more3); length(unique(era.df.more3$mother.id))
hist(era.df.more3$altitude)
era.df.more3$altitude.scaled <- scale(era.df.more3$altitude ); hist(era.df.more3$altitude.scaled)
era.df.more3$aspect.ratio.scaled <- scale(era.df.more3$aspect.ratio ); hist(era.df.more3$aspect.ratio.scaled)
era.df.more3$area.scaled <- scale(era.df.more3$area ); hist(era.df.more3$area.scaled)
era.df.more3$dev.time.scaled <- scale(era.df.more3$dev.time ); hist(era.df.more3$dev.time)
# colinearity
library(olsrr)
m1.lm <- lm(aspect.ratio ~ altitude.type +area.scaled+sex+dev.time.scaled , data=subset(era.df.more3, species=="erato") ) ; summary(m1.lm)
ols_vif_tol(m1.lm)
ols_eigen_cindex(m1.lm)
ggplot(aes(y=aspect.ratio , x=dev.time), data=era.df.more3)+
geom_point()+geom_smooth(method="lm")+facet_wrap(~species)+stat_regline_equation(label.y.npc = .8)+stat_cor()
m1.lmer <- lmerTest::lmer(aspect.ratio ~ altitude.type +area.scaled+sex+dev.time.scaled  + (1|rearing.batch) + (1|altitude.type:rearing.batch) + (1|altitude.type:rearing.batch:mother.id),
data=subset(era.df.more3, species=="erato") ) ; plot(m1.lmer);summary(m1.lmer)
m1.lmer1 <- lmerTest::lmer(aspect.ratio ~ altitude.type +area.scaled+sex+dev.time.scaled  + (1|rearing.batch/mother.id) + (1|mother.id),
data=subset(era.df.more3, species=="erato") ) ; plot(m1.lmer1);summary(m1.lmer1)
# 2. for model random selection use REML fit
lmerTest::ranova(m1.lmer1) # drop nesting
# 2. for model random selection use REML fit
lmerTest::ranova(m1.lmer1) # drop nesting
m1.lmer1 <- lmerTest::lmer(aspect.ratio ~ altitude.type +area.scaled+sex+dev.time.scaled  + (1|rearing.batch) + (1|mother.id),
data=subset(era.df.more3, species=="erato") ) ; plot(m1.lmer1);summary(m1.lmer1)
# 2. for model random selection use REML fit
lmerTest::ranova(m1.lmer1) # drop nesting
# 2. for model random selection use REML fit
lmerTest::ranova(m1.lmer1) # drop rearing batch
m1.lmer1 <- lmerTest::lmer(aspect.ratio ~ altitude.type +area.scaled+sex+dev.time.scaled  + (1|rearing.batch) + (1|mother.id),
data=subset(era.df.more3, species=="erato") ) ; plot(m1.lmer1);summary(m1.lmer1)
m1.lmer <- lmerTest::lmer(aspect.ratio ~ altitude.type +area.scaled+sex+dev.time.scaled  + (1|rearing.batch) + (1|altitude.type:rearing.batch) + (1|altitude.type:rearing.batch:mother.id),
data=subset(era.df.more3, species=="erato") ) ; plot(m1.lmer);summary(m1.lmer)
# equivalent , because for every mother.id there is only ever ONE altitude.type and ONE rearing batch
m1.lmer1 <- lmerTest::lmer(aspect.ratio ~ altitude.type +area.scaled+sex+dev.time.scaled  + (1|rearing.batch) + (1|mother.id),
data=subset(era.df.more3, species=="erato") ) ; plot(m1.lmer1);summary(m1.lmer1)
# 2. for model random selection use REML fit
lmerTest::ranova(m1.lmer1) # drop rearing batch
m1.lmer1 <- lmerTest::lmer(aspect.ratio ~ altitude.type +area.scaled+sex+dev.time.scaled  + (1|rearing.batch) + (1|mother.id),
data=subset(era.df.more3, species=="erato") ) ; plot(m1.lmer1);summary(m1.lmer1)
lmerTest::ranova(m1.lmer1) # drop rearing batch
m2.lmer <- lmerTest::lmer(aspect.ratio ~ altitude.type +area.scaled+sex+dev.time.scaled + (1|mother.id),
data=subset(era.df.more3, species=="erato") ) ; plot(m2.lmer);summary(m2.lmer)
# 2. for model random selection use REML fit
lmerTest::ranova(m1.lmer1) # drop rearing batch
m1.lmer1 <- lmerTest::lmer(aspect.ratio ~ altitude.type +area.scaled+sex+dev.time.scaled  + (1|rearing.batch) + (1|mother.id),
data=subset(era.df.more3, species=="erato") ) ; plot(m1.lmer1);summary(m1.lmer1)
# equivalent , because for every mother.id there is only ever ONE altitude.type and ONE rearing batch
m1.lmer1 <- lmerTest::lmer(aspect.ratio ~ altitude.type +area.scaled+sex+dev.time.scaled  + (1|rearing.batch/mother.id) + (1|mother.id),
data=subset(era.df.more3, species=="erato") ) ; plot(m1.lmer1);summary(m1.lmer1)
# 2. for model random selection use REML fit
lmerTest::ranova(m1.lmer1) # drop rearing batch
m1.lmer1 <- lmerTest::lmer(aspect.ratio ~ altitude.type +area.scaled+sex+dev.time.scaled  + (1|rearing.batch) + (1|mother.id),
data=subset(era.df.more3, species=="erato") ) ; plot(m1.lmer1);summary(m1.lmer1)
lmerTest::ranova(m1.lmer1) # drop rearing batch
m2.lmer <- lmerTest::lmer(aspect.ratio ~ altitude.type +area.scaled+sex+dev.time.scaled + (1|mother.id),
data=subset(era.df.more3, species=="erato") ) ; plot(m2.lmer);summary(m2.lmer)
# 3. for fixed effect selection use ML fit
drop1(update(m2.lmer, REML = F), test = "Chisq") # drop nothing
m3.lmer <- lmerTest::lmer(aspect.ratio ~ altitude.type +area.scaled+sex+dev.time.scaled + (1|mother.id),
data=subset(era.df.more3, species=="erato") ) ; plot(m3.lmer);summary(m3.lmer)
# checks
library(ggResidpanel)
resid_panel(m3.lmer)
# results to report
summary(m3.lmer)
summary(lmerTest::as_lmerModLmerTest(m3.lmer))
lmerTest::ranova(m3.lmer)
## R2 mumin ##
# marginal:  proportion of variance explained by the fixed factor(s)
# conditional: proportion of variance explained by both the fixed and random factors. info: https://jonlefcheck.net/2013/03/13/r2-for-linear-mixed-effects-models/comment-page-1/
MuMIn::r.squaredGLMM((m3.lmer))
# similar values when estimated with other packages
performance::r2((m3.lmer))
piecewiseSEM::rsquared((m3.lmer))
############### 2.2.2 melpomene #################
## checks, prep ##
## scale explanatory variables, only
mel.df.more3 <- subset(subset(df, aspect.ratio!=""& mother.id!=""&species=="melpomene"&dev.time!=""), mother.id %in% summ[summ$n>2,]$mother.id)
# development time does not get selected so we can drop it and use more datapoints
mel.df.more3 <- subset(subset(df, aspect.ratio!=""& mother.id!=""&species=="melpomene"&(type.reared=="reared")), mother.id %in% summ[summ$n>2,]$mother.id)
nrow(mel.df.more3); length(unique(mel.df.more3$mother.id))
mel.df.more3$altitude.scaled <- scale(mel.df.more3$altitude, center = T ); hist(mel.df.more3$altitude.scaled)
mel.df.more3$aspect.ratio.scaled <- scale(mel.df.more3$aspect.ratio, center = T  ); hist(mel.df.more3$aspect.ratio.scaled)
mel.df.more3$area.scaled <- scale(mel.df.more3$area, center = T  ); hist(mel.df.more3$area.scaled)
mel.df.more3$dev.time.scaled <- scale(mel.df.more3$dev.time, center = T  ); hist(mel.df.more3$dev.time)
## 1. lmerTest melpomene model selection ##
m1.lmer <- lmerTest::lmer(aspect.ratio ~ altitude.type +area.scaled+sex+dev.time.scaled  + (1|mother.id),
data=subset(mel.df.more3, species=="melpomene") ) ; plot(m1.lmer);summary(m1.lmer)
# 2. for model random selection use REML fit
lmerTest::ranova(m1.lmer) # dont drop
m2.lmer <- lmerTest::lmer(aspect.ratio ~ altitude.type +area.scaled+sex+dev.time.scaled + (1|mother.id),
data=subset(mel.df.more3, species=="melpomene") ) ; plot(m2.lmer);summary(m2.lmer)
# 3. for fixed effect selection use ML fit
drop1(update(m2.lmer, REML = F), test = "Chisq") # drop dev time
m3.lmer <- lmerTest::lmer(aspect.ratio ~ altitude.type +area.scaled+sex + (1|mother.id),
data=subset(mel.df.more3, species=="melpomene") ) ; plot(m3.lmer);summary(m3.lmer)
# checks
library(ggResidpanel)
resid_panel(m3.lmer)
# results to report
summary(m3.lmer)
lmerTest::ranova(m3.lmer)
piecewiseSEM::rsquared((m3.lmer))
### broods
names(df)
summ <- summarise(group_by(subset(df.more3, area!=""& type.reared=="reared"), mother.id,species,rearing.batch),
n=n(),
aspect.ratio=mean(aspect.ratio),
area=mean(area),
altitude=mean(altitude),
no.fem=length(subset(sex, sex=="female")),
no.male=length(subset(sex, sex=="male")),
ratio=no.male/no.fem); summ
##### 2.1 anova / repeatability   #####
# size
names(era.df.more3)
size.aov<-aov(area ~ mother.id, data = subset(df.more3, species=="H. erato") ); summary(size.aov)
rep.size<- rpt(area  ~ area+sex+(1|mother.id), grname=c("mother.id"), datatype="Gaussian",
nboot = 100, data=subset(era.df.more3, species=="erato") ); print(rep.size) ; plot(rep.size, cex.main = 1) # size repeatability R=0.74 SE = 0.069 P=0
##### 2.1 anova / repeatability   #####
# size
size.aov<-aov(area ~ mother.id, data = subset(df.more3, species=="H. erato") ); summary(size.aov)
rep.size<- rpt(area  ~ area+sex+(1|mother.id), grname=c("mother.id"), datatype="Gaussian",
nboot = 100, data=subset(era.df.more3, species=="erato") ); print(rep.size) ; plot(rep.size, cex.main = 1)
size.aov<-aov(area ~ mother.id, data = subset(df.more3, species=="H. melpomene") ); summary(size.aov)
rep.size<- rpt(area  ~ area+sex+(1|mother.id), grname=c("mother.id"), datatype="Gaussian",
nboot = 100, data=subset(df.more3, mother.id!=""&species=="H. melpomene"&type.reared=="reared") ); print(rep.size) ; plot(rep.size, cex.main = 1)
# shape
shape.aov<-aov(aspect.ratio ~ mother.id, data = subset(df.more3, species=="H. erato") ); summary(shape.aov)
rep.shape<- rpt(aspect.ratio  ~ (1|mother.id), grname=c("mother.id"), datatype="Gaussian",
nboot = 100, data=subset(era.df.more3, species=="erato") ); print(rep.shape) ; plot(rep.shape, cex.main = 1) # shape repeatability R=0.74 SE = 0.069 P=0
rep.shape<- rpt(aspect.ratio  ~ area.scaled +altitude.type+ dev.time.scaled+ sex+(1|mother.id), grname=c("mother.id"), datatype="Gaussian",
nboot = 100, data=subset(era.df.more3, species=="erato") ); print(rep.shape) ; plot(rep.shape, cex.main = 1) # shape repeatability R=0.74 SE = 0.069 P=0
shape.aov<-aov(aspect.ratio ~ mother.id, data = subset(df.more3, species=="H. melpomene") ); summary(shape.aov)
rep.shape<- rpt(aspect.ratio  ~ area.scaled +altitude.type+  sex+(1|mother.id), grname=c("mother.id"), datatype="Gaussian",
nboot = 100, data=subset(mel.df.more3, species=="melpomene")  ); print(rep.shape) ; plot(rep.shape, cex.main = 1) # shape repeatability R=0.74 SE = 0.069 P=0
ggscatter(subset(summ, n>2),x="ar.mother", y = "aspect.ratio.mean",rug = F,add = "reg.line",conf.int = T, label="",
palette = c("#00AFBB", "#E7B800"), facet.by = c("species"), scales="fixed")+stat_cor()+stat_regline_equation(label.y.npc = 0.8)+
geom_point(aes(size=n,colour=altitude.type2))+
geom_abline(slope=1, intercept=, colour="grey",lty=2)+
scale_colour_viridis_d()+ylim(1.95,2.2)+xlim(1.95,2.2)
